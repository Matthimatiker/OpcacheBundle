{# @see http://symfony.com/doc/current/cookbook/profiler/data_collector.html #}
{# @var collector \Matthimatiker\OpcacheBundle\DataCollector\ByteCodeCacheDataCollector #}
{% extends 'WebProfilerBundle:Profiler:layout.html.twig' %}

{% macro number(value, precision = 2) %}
    {%- set template = '%.' ~ precision ~ 'F' -%}
    {{- template | format(value) -}}
{% endmacro %}

{% macro truncate(value, max_length) %}
    {%- if value|length > max_length -%}
        {%- set template = '%' ~ (max_length - 3) ~ '.' ~ (max_length - 3) ~ 's' -%}
        {{- template | format(value) -}}...
    {%- else -%}
        {{- value -}}
    {%- endif -%}
{% endmacro %}

{% macro color_green() %}
    {{- '#759e1a' -}}
{% endmacro %}

{% macro color_yellow() %}
    {{- '#ffcc00' -}}
{% endmacro %}

{% macro color_red() %}
    {{- '#a33' -}}
{% endmacro %}

{% block toolbar %}
    {% import _self as cache %}

    {% set icon %}
        {# This block appears in the toolbar. #}
        {% set memory_status_color = (collector.byteCodeCache.memory.full) ? 'red' : ((collector.byteCodeCache.memory.usedInPercent) >= 80 ? 'yellow' : 'green') %}
        <span class="icon">
            <svg width="13" height="28" xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" viewBox="0 0 13 28" enable-background="new 0 0 13 28" xml:space="preserve">
                <g><rect x="3" y="11" fill="#BCBCBB" width="7" height="9"/></g>
                <g><path fill="#3F3F3F" d="M11 6V21H2V6H0V22c0 0.6 0.4 1 1 1h11c0.6 0 1-0.4 1-1V6H11z"/></g>
            </svg>
        </span>
        <span class="sf-toolbar-status sf-toolbar-status-{{ memory_status_color }}">
            {{ cache.number(collector.byteCodeCache.memory.usedInMb + collector.byteCodeCache.memory.wastedInMb, 0) }} / {{ cache.number(collector.byteCodeCache.memory.sizeInMb, 0) }} MB
        </span>
    {% endset %}

    {% set text %}
        {# This block is shown on hover. #}
        <div class="sf-toolbar-info-piece">
            <b>Opcache</b>
        </div>
        {% set memory_status_color = (collector.byteCodeCache.memory.full) ? 'red' : ((collector.byteCodeCache.memory.usedInPercent + collector.byteCodeCache.memory.wastedInPercent) >= 80 ? 'yellow' : 'green') %}
        <div class="sf-toolbar-info-piece">
            <b>Memory usage</b>
            <span class="sf-toolbar-status sf-toolbar-status-{{ memory_status_color }}">
                {{ cache.number(collector.byteCodeCache.memory.usedInMb + collector.byteCodeCache.memory.wastedInMb) }} / {{ cache.number(collector.byteCodeCache.memory.sizeInMb) }} MB
            </span>
        </div>
        {% set hit_ratio_status_color = (collector.byteCodeCache.statistics.hitRateInPercent >= 90.0) ? 'green' : ((collector.byteCodeCache.statistics.hitRateInPercent) >= 70.0 ? 'yellow' : 'red') %}
        <div class="sf-toolbar-info-piece">
            <b>Hit ratio</b>
            <span class="sf-toolbar-status sf-toolbar-status-{{ hit_ratio_status_color }}">
                {{ cache.number(collector.byteCodeCache.statistics.hitRateInPercent) }}%
            </span>
        </div>
    {% endset %}

    {# Include a link to the details panel. #}
    {{ include('@WebProfiler/Profiler/toolbar_item.html.twig', { 'link': true }) }}
{% endblock %}

{% block head %}
    {{ parent() }}
    <link href="//cdnjs.cloudflare.com/ajax/libs/c3/0.4.10/c3.min.css" rel="stylesheet" type="text/css" media="all" />
    <style type="text/css" media="all">
        text.c3-chart-arcs-title {
            font-size: 200%;
            font-weight: bold;
        }

        tr.sum th {
            border-top: 2px solid #d0dbb3;
        }
        tr.sum td {
            border-top: 2px solid black;
        }

        table.data-table th {
            vertical-align: top;
        }
    </style>
    <link href="{{ asset('bundles/matthimatikeropcache/css/sortable-table.css') }}" rel="stylesheet" type="text/css" media="all" />
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/c3/0.4.10/c3.min.js" charset="utf-8"></script>
    {#
      Documentation:
      - https://github.com/tristen/tablesort
      - http://tristen.ca/tablesort/demo/
    #}
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/tablesort/3.1.0/tablesort.min.js" charset="utf-8"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/tablesort/3.1.0/src/sorts/tablesort.numeric.js" charset="utf-8"></script>
{% endblock %}

{% block menu %}
    {# This left-hand menu appears when using the full-screen profiler. #}
    <span class="label">
        <span class="icon">
            <svg width="38" height="28" xmlns="http://www.w3.org/2000/svg" version="1.1" x="0px" y="0px" viewBox="0 0 13 28" enable-background="new 0 0 13 28" xml:space="preserve">
                <g><rect x="3" y="11" fill="#BCBCBB" width="7" height="9"/></g>
                <g><path fill="#3F3F3F" d="M11 6V21H2V6H0V22c0 0.6 0.4 1 1 1h11c0.6 0 1-0.4 1-1V6H11z"/></g>
            </svg>
        </span>
        <strong>Opcache</strong>
    </span>
{% endblock %}

{% block panel %}
    {% import _self as cache %}

    {# Shows details about the cache state. #}
    <h2>Opcache</h2>
    <div>
        <h3>Memory usage</h3>

        <div id="byteCodeCacheMemoryUsage"></div>
        <script type="application/javascript">
            (function () {
                c3.generate({
                    bindto: "#byteCodeCacheMemoryUsage",
                    data: {
                        columns: [
                            ['Used', {{ collector.byteCodeCache.memory.usedInMb }}],
                            ['Wasted', {{ collector.byteCodeCache.memory.wastedInMb }}],
                            ['Free', {{ collector.byteCodeCache.memory.freeInMb }}]
                        ],
                        colors: {
                            'Used': '{{ cache.color_yellow() }}',
                            'Wasted': '{{ cache.color_red() }}',
                            'Free': '{{ cache.color_green() }}'
                        },
                        type: 'donut'
                    },
                    donut: {
                        title: "{{ cache.number(collector.byteCodeCache.memory.freeInMb) }} MB free",
                        expand: false
                    },
                    tooltip: {
                        format: {
                            value: function (value) {
                                return value.toFixed(2) + ' MB';
                            }
                        }
                    }
                });
            })();
        </script>

        <table>
            <thead>
                <tr>
                    <th scope="col">Memory</th>
                    <th scope="col">MB</th>
                    <th scope="col">Percent</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th>Used</th>
                    <td>{{ cache.number(collector.byteCodeCache.memory.usedInMb) }}</td>
                    <td>{{ cache.number(collector.byteCodeCache.memory.usedInPercent) }}</td>
                </tr>
                <tr>
                    <th>Wasted</th>
                    <td>{{ cache.number(collector.byteCodeCache.memory.wastedInMb) }}</td>
                    <td>{{ cache.number(collector.byteCodeCache.memory.wastedInPercent) }}</td>
                </tr>
                <tr>
                    <th>Free</th>
                    <td>{{ cache.number(collector.byteCodeCache.memory.freeInMb) }}</td>
                    <td>{{ cache.number(collector.byteCodeCache.memory.freeInPercent) }}</td>
                </tr>
                <tr class="sum">
                    <th>Size</th>
                    <td>{{ cache.number(collector.byteCodeCache.memory.sizeInMb) }}</td>
                    <td>{{ cache.number(collector.byteCodeCache.memory.usedInPercent + collector.byteCodeCache.memory.wastedInPercent + collector.byteCodeCache.memory.freeInPercent) }}</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div>
        <h3>Script slots</h3>

        <div id="byteCodeCacheScriptSlots"></div>
        <script type="application/javascript">
            (function () {
                c3.generate({
                    bindto: "#byteCodeCacheScriptSlots",
                    data: {
                        columns: [
                            ['Used', {{ collector.byteCodeCache.scripts.slots.used }}],
                            ['Wasted', {{ collector.byteCodeCache.scripts.slots.wasted }}],
                            ['Free', {{ collector.byteCodeCache.scripts.slots.free }}]
                        ],
                        colors: {
                            'Used': '{{ cache.color_yellow() }}',
                            'Wasted': '{{ cache.color_red() }}',
                            'Free': '{{ cache.color_green() }}'
                        },
                        type: 'donut'
                    },
                    donut: {
                        title: "{{ collector.byteCodeCache.scripts.slots.free }} slots free",
                        expand: false
                    },
                    tooltip: {
                        format: {
                            value: function (value) {
                                return value;
                            }
                        }
                    }
                });
            })();
        </script>

        <table>
            <thead>
                <tr>
                    <th scope="col">Slots</th>
                    <th scope="col">Number</th>
                    <th scope="col">Percent</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th>Used</th>
                    <td>{{ collector.byteCodeCache.scripts.slots.used }}</td>
                    <td>{{ cache.number(collector.byteCodeCache.scripts.slots.usedInPercent) }}</td>
                </tr>
                <tr>
                    <th>Wasted</th>
                    <td>{{ collector.byteCodeCache.scripts.slots.wasted }}</td>
                    <td>{{ cache.number(collector.byteCodeCache.scripts.slots.wastedInPercent) }}</td>
                </tr>
                <tr>
                    <th>Free</th>
                    <td>{{ collector.byteCodeCache.scripts.slots.free }}</td>
                    <td>{{ cache.number(collector.byteCodeCache.scripts.slots.freeInPercent) }}</td>
                </tr>
                <tr class="sum">
                    <th>All</th>
                    <td>{{ collector.byteCodeCache.scripts.slots.max }}</td>
                    <td>{{ cache.number(collector.byteCodeCache.scripts.slots.usedInPercent + collector.byteCodeCache.scripts.slots.wastedInPercent + collector.byteCodeCache.scripts.slots.freeInPercent) }}</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div>
        <h3>Hit ratio</h3>

        <div id="byteCodeCacheHitRatio"></div>
        <script type="application/javascript">
            (function () {
                c3.generate({
                    bindto: "#byteCodeCacheHitRatio",
                    data: {
                        columns: [
                            ['Misses', {{ collector.byteCodeCache.statistics.misses }}],
                            ['Hits', {{ collector.byteCodeCache.statistics.hits }}]
                        ],
                        colors: {
                            'Misses': '{{ cache.color_red() }}',
                            'Hits': '{{ cache.color_green() }}'
                        },
                        type: 'donut'
                    },
                    donut: {
                        title: "{{ cache.number(collector.byteCodeCache.statistics.hitRateInPercent) }}% hit rate",
                        expand: false
                    },
                    tooltip: {
                        format: {
                            value: function (value) {
                                return value;
                            }
                        }
                    }
                });
            })();
        </script>

        <table>
            <thead>
                <tr>
                    <th scope="col">Metric</th>
                    <th scope="col">Number</th>
                    <th scope="col">Percent</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th>Hits</th>
                    <td>{{ collector.byteCodeCache.statistics.hits }}</td>
                    <td>{{ cache.number(collector.byteCodeCache.statistics.hitRateInPercent) }}</td>
                </tr>
                <tr>
                    <th>Misses</th>
                    <td>{{ collector.byteCodeCache.statistics.misses }}</td>
                    <td>{{ cache.number(collector.byteCodeCache.statistics.missRateInPercent) }}</td>
                </tr>
                <tr class="sum">
                    <th>Requests</th>
                    <td>{{ collector.byteCodeCache.statistics.requests }}</td>
                    <td>{{ cache.number(collector.byteCodeCache.statistics.hitRateInPercent + collector.byteCodeCache.statistics.missRateInPercent) }}</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div>
        <h3>Configuration</h3>

        {% include 'MatthimatikerOpcacheBundle:DataCollector/partials:DataTable.html.twig' with {'data': collector.byteCodeCache.configuration} only %}
    </div>

    <div>
        <h3>Cached scripts</h3>

        <table id="cachedScripts">
            <thead>
                <tr>
                    <th scope="col">Path</th>
                    <th scope="col" data-sort-method="number">Hits</th>
                    <th scope="col" data-sort-method="number">Memory consumption in bytes</th>
                    <th scope="col" data-sort-method="number">File size in bytes</th>
                    <th scope="col" class="sort-default">Last access</th>
                </tr>
            </thead>
            <tbody>
                {% for script in collector.byteCodeCache.scripts %}
                    {# @var script \Matthimatiker\OpcacheBundle\ByteCodeCache\Script #}
                    <tr>
                        <td data-sort="{{ script.file.pathname }}">
                            <span title="{{ script.file.pathname }}">{{ cache.truncate(script.file.basename, 30) }}</span>
                        </td>
                        <td>{{ script.hits }}</td>
                        <td>{{ script.memoryConsumptionInBytes }}</td>
                        <td>
                            {% if script.file.isFile %}
                                {{ script.file.size }}
                            {% else %}
                                -
                            {% endif %}
                        </td>
                        <td>{{ script.lastAccess | date('Y-m-d H:i:s') }}</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
        <script type="application/javascript">
            (function () {
                new Tablesort(document.getElementById('cachedScripts'));
            })();
        </script>
    </div>
{% endblock %}
